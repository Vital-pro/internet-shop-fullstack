//* теперь разберемся с переменной const isAuth = false. Она нам понадобится в нескольких компонентах, поэтому вынесем ее в отдельное глобальное хранилище. В folder store -> create file UserStore.js -> сейчас будем работать уже с mobx

import { makeAutoObservable } from "mobx"

export default class UserStore {
  // constructor будет вызываться при создании оюъекта данного class
  constructor() {
    //нижнее подчеркивание означает, что эта переменная изменяться не может
    this._isAuth = false
    this._user = {}
    makeAutoObservable(this)
    // передаем параметром объект this, и теперь mobx будет следить за изменениями этих переменных. И,соответственно, при их изменении компоненты будут перерендерироваться
  }

  // теперь создадим action-ы (экшены). Это ф-ции, которые состояние как-то изменяют
  setIsAuth(bool) {
    this._isAuth = bool
  }
  setUser(user) {
    this._user = user
  }

  // следующим этапом создадим get-теры Они нужны для того, чтобы получать какие-то переменные из нашего состояния. Но называем их уже без _нижнего подч-я. К ним мы будем обращаться как к обычным объектам. Это, так называемые, компьютед ф-ции. Они вызываются только в том случае, если переменная, которая используется внутри, была изменена. Своего рода, оптимимзация
  get isAuth() {
    return this._isAuth
  }
  get user() {
    return this._user
  }
}

// Теперь разберемся с тем, как это состояние прокидывать в наши компоненты. Переходим in folder utils -> file index.js